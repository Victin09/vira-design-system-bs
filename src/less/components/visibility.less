// Name:            Visibility
// Description:     Utilities to show or hide content on breakpoints, hover or touch
//
// Component:       `vds-hidden-*`
//                  `vds-visible-*`
//                  `vds-invisible`
//                  `vds-visible-toggle`
//                  `vds-hidden-hover`
//                  `vds-invisible-hover`
//                  `vds-hidden-touch`
//                  `vds-hidden-notouch`
//
// ========================================================================


/* ========================================================================
   Component: Visibility
 ========================================================================== */

/*
 * Hidden
 * `hidden` attribute also set here to make it stronger
 */

[hidden],
.vds-hidden { display: none !important; }

/* Phone landscape and bigger */
@media (min-width: @breakpoint-small) {

    .vds-hidden\@s { display: none !important; }

}

/* Tablet landscape and bigger */
@media (min-width: @breakpoint-medium) {

    .vds-hidden\@m { display: none !important; }

}

/* Desktop and bigger */
@media (min-width: @breakpoint-large) {

    .vds-hidden\@l { display: none !important; }

}

/* Large screen and bigger */
@media (min-width: @breakpoint-xlarge) {

    .vds-hidden\@xl { display: none !important; }

}

/*
 * Visible
 */

/* Phone portrait and smaller */
@media (max-width: @breakpoint-xsmall-max) {

    .vds-visible\@s { display: none !important; }

}

/* Phone landscape and smaller */
@media (max-width: @breakpoint-small-max) {

    .vds-visible\@m { display: none !important; }

}

/* Tablet landscape and smaller */
@media (max-width: @breakpoint-medium-max) {

    .vds-visible\@l { display: none !important; }

}

/* Desktop and smaller */
@media (max-width: @breakpoint-large-max) {

    .vds-visible\@xl { display: none !important; }

}


/* Visibility
 ========================================================================== */

.vds-invisible { visibility: hidden !important; }


/* Based on the State of the Parent Element
 ========================================================================== */

/*
 * Can't use `display: none` nor `visibility: hidden` because both are not focusable.
 * The target stays visible if any element within receives focus through keyboard.
 */

/*
 * Discard space when hidden.
 */

.vds-visible-toggle:not(:hover):not(:focus) .vds-hidden-hover:not(:focus-within) {
    position: absolute !important;
    width: 0 !important;
    height: 0 !important;
    padding: 0 !important;
    margin: 0 !important;
    overflow: hidden !important;
}

/*
 * Keep space when hidden.
 */

.vds-visible-toggle:not(:hover):not(:focus) .vds-invisible-hover:not(:focus-within) { opacity: 0 !important; }


/* Based on Hover Capability of the Pointing Device
 ========================================================================== */

/*
 * Hover
 */

/* Hide if primary pointing device doesn't support hover, e.g. touch screens. */
@media (hover: none) {
    .vds-hidden-touch { display: none !important; }
}

/* Hide if primary pointing device supports hover, e.g. mice. */
@media (hover) {
    .vds-hidden-notouch { display: none !important; }
}


// Hooks
// ========================================================================

.hook-visibility-misc();

.hook-visibility-misc() {}
