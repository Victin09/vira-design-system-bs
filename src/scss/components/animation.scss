// Name:            Animation
// Description:     Utilities for keyframe animations
//
// Component:       `vds-animation-*`
//
// Modifiers:       `vds-animation-fade`
//                  `vds-animation-scale-up`
//                  `vds-animation-scale-down`
//                  `vds-animation-slide-top-*`
//                  `vds-animation-slide-bottom-*`
//                  `vds-animation-slide-left-*`
//                  `vds-animation-slide-right-*`
//                  `vds-animation-kenburns`
//                  `vds-animation-shake`
//                  `vds-animation-stroke`
//                  `vds-animation-reverse`
//                  `vds-animation-fast`
//
// Sub-objects:     `vds-animation-toggle`
//
// States:          `vds-active`
//
// ========================================================================

// Variables
// ========================================================================

$animation-duration: 0.5s !default;
$animation-fade-duration: 0.8s !default;
$animation-stroke-duration: 2s !default;
$animation-kenburns-duration: 15s !default;
$animation-fast-duration: 0.1s !default;

$animation-slide-small-translate: 10px !default;
$animation-slide-medium-translate: 50px !default;

/* ========================================================================
   Component: Animation
 ========================================================================== */

[class*='vds-animation-'] {
    animation: $animation-duration ease-out both;
}

/* Animations
 ========================================================================== */

/*
 * Fade
 */

.vds-animation-fade {
    animation-name: vds-fade;
    animation-duration: $animation-fade-duration;
    animation-timing-function: linear;
}

/*
 * Scale
 */

.vds-animation-scale-up {
    animation-name: vds-fade, vds-scale-up;
}
.vds-animation-scale-down {
    animation-name: vds-fade, vds-scale-down;
}

/*
 * Slide
 */

.vds-animation-slide-top {
    animation-name: vds-fade, vds-slide-top;
}
.vds-animation-slide-bottom {
    animation-name: vds-fade, vds-slide-bottom;
}
.vds-animation-slide-left {
    animation-name: vds-fade, vds-slide-left;
}
.vds-animation-slide-right {
    animation-name: vds-fade, vds-slide-right;
}

/*
 * Slide Small
 */

.vds-animation-slide-top-small {
    animation-name: vds-fade, vds-slide-top-small;
}
.vds-animation-slide-bottom-small {
    animation-name: vds-fade, vds-slide-bottom-small;
}
.vds-animation-slide-left-small {
    animation-name: vds-fade, vds-slide-left-small;
}
.vds-animation-slide-right-small {
    animation-name: vds-fade, vds-slide-right-small;
}

/*
 * Slide Medium
 */

.vds-animation-slide-top-medium {
    animation-name: vds-fade, vds-slide-top-medium;
}
.vds-animation-slide-bottom-medium {
    animation-name: vds-fade, vds-slide-bottom-medium;
}
.vds-animation-slide-left-medium {
    animation-name: vds-fade, vds-slide-left-medium;
}
.vds-animation-slide-right-medium {
    animation-name: vds-fade, vds-slide-right-medium;
}

/*
 * Kenburns
 */

.vds-animation-kenburns {
    animation-name: vds-kenburns;
    animation-duration: $animation-kenburns-duration;
}

/*
 * Shake
 */

.vds-animation-shake {
    animation-name: vds-shake;
}

/*
 * SVG Stroke
 * The `--vds-animation-stroke` custom property contains the longest path length.
 * Set it manually or use `vds-svg="stroke-animation: true"` to set it automatically.
 * All strokes are animated by the same pace and doesn't end simultaneously.
 * To end simultaneously, `pathLength="1"` could be used, but it's not working in Safari yet.
 */

.vds-animation-stroke {
    animation-name: vds-stroke;
    animation-duration: $animation-stroke-duration;
    stroke-dasharray: var(--vds-animation-stroke);
}

/* Direction modifier
 ========================================================================== */

.vds-animation-reverse {
    animation-direction: reverse;
    animation-timing-function: ease-in;
}

/* Duration modifier
 ========================================================================== */

.vds-animation-fast {
    animation-duration: $animation-fast-duration;
}

/* Toggle animation based on the State of the Parent Element
 ========================================================================== */

.vds-animation-toggle:not(:hover):not(:focus) [class*='vds-animation-'] {
    animation-name: none;
}

/* Keyframes used by animation classes
 ========================================================================== */

/*
 * Fade
 */

@keyframes vds-fade {
    0% {
        opacity: 0;
    }
    100% {
        opacity: 1;
    }
}

/*
 * Scale
 */

@keyframes vds-scale-up {
    0% {
        transform: scale(0.9);
    }
    100% {
        transform: scale(1);
    }
}

@keyframes vds-scale-down {
    0% {
        transform: scale(1.1);
    }
    100% {
        transform: scale(1);
    }
}

/*
 * Slide
 */

@keyframes vds-slide-top {
    0% {
        transform: translateY(-100%);
    }
    100% {
        transform: translateY(0);
    }
}

@keyframes vds-slide-bottom {
    0% {
        transform: translateY(100%);
    }
    100% {
        transform: translateY(0);
    }
}

@keyframes vds-slide-left {
    0% {
        transform: translateX(-100%);
    }
    100% {
        transform: translateX(0);
    }
}

@keyframes vds-slide-right {
    0% {
        transform: translateX(100%);
    }
    100% {
        transform: translateX(0);
    }
}

/*
 * Slide Small
 */

@keyframes vds-slide-top-small {
    0% {
        transform: translateY(-$animation-slide-small-translate);
    }
    100% {
        transform: translateY(0);
    }
}

@keyframes vds-slide-bottom-small {
    0% {
        transform: translateY($animation-slide-small-translate);
    }
    100% {
        transform: translateY(0);
    }
}

@keyframes vds-slide-left-small {
    0% {
        transform: translateX(-$animation-slide-small-translate);
    }
    100% {
        transform: translateX(0);
    }
}

@keyframes vds-slide-right-small {
    0% {
        transform: translateX($animation-slide-small-translate);
    }
    100% {
        transform: translateX(0);
    }
}

/*
 * Slide Medium
 */

@keyframes vds-slide-top-medium {
    0% {
        transform: translateY(-$animation-slide-medium-translate);
    }
    100% {
        transform: translateY(0);
    }
}

@keyframes vds-slide-bottom-medium {
    0% {
        transform: translateY($animation-slide-medium-translate);
    }
    100% {
        transform: translateY(0);
    }
}

@keyframes vds-slide-left-medium {
    0% {
        transform: translateX(-$animation-slide-medium-translate);
    }
    100% {
        transform: translateX(0);
    }
}

@keyframes vds-slide-right-medium {
    0% {
        transform: translateX($animation-slide-medium-translate);
    }
    100% {
        transform: translateX(0);
    }
}

/*
 * Kenburns
 */

@keyframes vds-kenburns {
    0% {
        transform: scale(1);
    }
    100% {
        transform: scale(1.2);
    }
}

/*
 * Shake
 */

@keyframes vds-shake {
    0%,
    100% {
        transform: translateX(0);
    }
    10% {
        transform: translateX(-9px);
    }
    20% {
        transform: translateX(8px);
    }
    30% {
        transform: translateX(-7px);
    }
    40% {
        transform: translateX(6px);
    }
    50% {
        transform: translateX(-5px);
    }
    60% {
        transform: translateX(4px);
    }
    70% {
        transform: translateX(-3px);
    }
    80% {
        transform: translateX(2px);
    }
    90% {
        transform: translateX(-1px);
    }
}

/*
 * Stroke
 */

@keyframes vds-stroke {
    0% {
        stroke-dashoffset: var(--vds-animation-stroke);
    }
    100% {
        stroke-dashoffset: 0;
    }
}

// Hooks
// ========================================================================

@if (mixin-exists(hook-animation-misc)) {
    @include hook-animation-misc();
}

// @mixin hook-animation-misc(){}
